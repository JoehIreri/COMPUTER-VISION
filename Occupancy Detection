import cv2 
import numpy as np
def detect_empty_or_occupied(image_path):
    #path
    path=r'C:\Users\JOEHMWENDE\Desktop\CarParking\Car Parking Lot.jpg'
    # Input image 
    image = cv2.imread('Car Parking Lot 1.jpg') 
    # Convert image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # Apply GaussianBlur to reduce noise and improve accuracy
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

        # Use Canny edge detector to find edges in the image
    edges = cv2.Canny(blurred, 50, 150)
    # Find contours in the edges
    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

        # Set a threshold for the number of contours to determine occupancy
    occupancy_threshold = 10

    if len(contours) > occupancy_threshold:
            print("Parking lot is occupied")
    else:
            print("Parking lot is empty")
        # Display the original image with drawn contours
    image_with_contours = image.copy()
    cv2.drawContours(image_with_contours, contours, -1, (0, 255, 0), 2)
    cv2.imshow('Parking Lot Status', image_with_contours)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

#Path to the image of the parking lot
image_path = r'C:\Users\JOEHMWENDE\Desktop\CarParking\Car Parking Lot.jpg'
detect_empty_or_occupied(image_path)
